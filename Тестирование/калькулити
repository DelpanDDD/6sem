Библиотека
 public class Calculator
    {
        //создание функции сложения
        //модификаторы доступа(private и public) static типы данных имя функции
        //(тип данных данные) {что делает функция} {что делает функция,
        //обязательно return тип переменной с типом функции}
        public static float Sum(float a, float b)
        {
            float sum = a + b;
            return sum;
        }
        public static float Vich(float a, float b)
        {
            float vich = a - b;
            return vich;
        }
        public static float Del(float a, float b)
        {
            float del = 0;
            if (b == 0)
            {
                throw new DivideByZeroException();
            }
            else
                del = a / b;
            return del;
        }
        public static float Umn(float a, float b)
        {
            float umn = a * b;
            return umn;
        }
    }


---
Тест
---
[TestMethod()]
        public void SumTest()
        {
            // Arrange
            float a = 10;
            float b = 15;
            float expected = 25;
            // Act
            // вызов функции
            // задать переменную: тип данных и название
            // название класс. название функции (данные БЕЗ типов данных)
            float actual = Calculator.Sum(a, b);
            // Assert
            Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(expected, actual);
        }

        [TestMethod()]
        public void VichTest()
        {
            // Arrange
            float a = 15;
            float b = 10;
            float expected = 5;
            // Act
            // вызов функции
            // задать переменную: тип данных и название
            // название класс. название функции (данные БЕЗ типов данных)
            float actual = Calculator.Vich(a, b);
            // Assert
            Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(expected, actual);
        }

        [TestMethod()]
        public void DelTest()
        {
            // Arrange
            float a = 20;
            float b = 5;
            float expected = 4;
            // Act
            // вызов функции
            // задать переменную: тип данных и название
            // название класс. название функции (данные БЕЗ типов данных)
            float actual = Calculator.Del(a, b);
            // Assert
            Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(expected, actual);
        }

        [TestMethod()]
        public void UmnTest()
        {
            // Arrange
            float a = 20;
            float b = 5;
            float expected = 100;
            // Act
            // вызов функции
            // задать переменную: тип данных и название
            // название класс. название функции (данные БЕЗ типов данных)
            float actual = Calculator.Umn(a, b);
            // Assert
            Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(expected, actual);
        }

        [TestMethod()]
        [ExpectedException(typeof(DivideByZeroException),
   "Oh my god, we can't divison on zero")]
        public void Div_4Div0_ZeroDivException()
        {
            // arrange 

            float a = 4;
            float b = 0;
            // act
            float result = Calculator.Del(a, b);
            // assert            
        }
    }
